{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bake\\\\my-react-app\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductService from '../services/productservices';\n//import  from './UserManagement'; // Assuming you have a UserManagement component\nimport UserManagement from '../services/userservices'; // Import user service for user management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [productData, setProductData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    quantity: '',\n    category_id: '',\n    image: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle create form visibility\n  const [showUpdateForm, setShowUpdateForm] = useState(false); // State to toggle update form visibility\n  const [showDeleteForm, setShowDeleteForm] = useState(false); // State to toggle delete form visibility\n  const [users, setUsers] = useState([]); // State to hold users data\n  const [showUserManagement, setShowUserManagement] = useState(false); // State to toggle user management section\n\n  useEffect(() => {\n    // Simulate admin status based on some logic (e.g., hardcoded check)\n    const isAdminUser = checkAdminStatus(); // Implement your logic here\n    setIsAdmin(isAdminUser);\n    fetchProducts();\n    fetchUsers(); // Fetch users data when component mounts\n  }, []);\n  const checkAdminStatus = () => {\n    // Implement logic to determine admin status, e.g., from JWT or user roles\n    return true; // Return true for demonstration, replace with actual logic\n  };\n  const fetchProducts = async () => {\n    try {\n      const productsData = await ProductService.getAllProducts();\n      setProducts(productsData);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const usersData = await User.getAllUsers(); // Implement getAllUsers in your UserService\n      setUsers(usersData);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const fetchProductById = async productId => {\n    try {\n      const product = await ProductService.getProductById(productId);\n      console.log('Product fetched:', product);\n      // Optionally set the fetched product data into state for update form\n      setProductData({\n        name: product.name,\n        price: product.price,\n        description: product.description,\n        quantity: product.quantity,\n        category_id: product.category_id,\n        image: product.image\n      });\n      setShowUpdateForm(true); // Show update form on fetch\n    } catch (error) {\n      console.error(`Error fetching product ${productId}:`, error);\n    }\n  };\n  const handleCreateProduct = async () => {\n    try {\n      const response = await ProductService.createProduct(productData);\n      setMessage(response.message || 'Product created successfully');\n      fetchProducts();\n      clearProductData();\n    } catch (error) {\n      setMessage(`Error creating product: ${error.message}`);\n    }\n  };\n  const handleUpdateProduct = async (productId, updatedData) => {\n    try {\n      const response = await ProductService.updateProduct(productId, updatedData);\n      setMessage(response.message || 'Product updated successfully');\n      fetchProducts();\n      setShowUpdateForm(false); // Hide update form after update\n    } catch (error) {\n      setMessage(`Error updating product: ${error.message}`);\n    }\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      const response = await ProductService.deleteProduct(productId);\n      setMessage(response.message || 'Product deleted successfully');\n      fetchProducts();\n      setShowDeleteForm(false); // Hide delete form after delete\n    } catch (error) {\n      setMessage(`Error deleting product: ${error.message}`);\n    }\n  };\n  const clearProductData = () => {\n    setProductData({\n      name: '',\n      price: '',\n      description: '',\n      quantity: '',\n      category_id: '',\n      image: ''\n    });\n  };\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setShowUpdateForm(false); // Hide update form\n    setShowDeleteForm(false); // Hide delete form\n  };\n  const toggleUpdateForm = () => {\n    setShowUpdateForm(!showUpdateForm);\n    setShowCreateForm(false); // Hide create form\n    setShowDeleteForm(false); // Hide delete form\n  };\n  const toggleDeleteForm = () => {\n    setShowDeleteForm(!showDeleteForm);\n    setShowCreateForm(false); // Hide create form\n    setShowUpdateForm(false); // Hide update form\n  };\n  const toggleUserManagement = () => {\n    setShowUserManagement(!showUserManagement);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Product Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: toggleCreateForm,\n            children: \"Create Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-product-form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: toggleUpdateForm,\n              children: \"Update Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), showUpdateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"update-product-form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: toggleDeleteForm,\n              children: \"Delete Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), showDeleteForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-product-form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [product.name, \" - $\", product.price, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => fetchProductById(product.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteProduct(product.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleUserManagement,\n          children: \"Toggle User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), showUserManagement && /*#__PURE__*/_jsxDEV(UserManagement, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"non-admin-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"WtywG5WgNNTQPsVObpvamaU6R0A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ProductService","UserManagement","jsxDEV","_jsxDEV","Dashboard","_s","products","setProducts","productData","setProductData","name","price","description","quantity","category_id","image","message","setMessage","isAdmin","setIsAdmin","showCreateForm","setShowCreateForm","showUpdateForm","setShowUpdateForm","showDeleteForm","setShowDeleteForm","users","setUsers","showUserManagement","setShowUserManagement","isAdminUser","checkAdminStatus","fetchProducts","fetchUsers","productsData","getAllProducts","error","console","usersData","User","getAllUsers","fetchProductById","productId","product","getProductById","log","handleCreateProduct","response","createProduct","clearProductData","handleUpdateProduct","updatedData","updateProduct","handleDeleteProduct","deleteProduct","toggleCreateForm","toggleUpdateForm","toggleDeleteForm","toggleUserManagement","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bake/my-react-app/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProductService from '../services/productservices';\r\n//import  from './UserManagement'; // Assuming you have a UserManagement component\r\nimport UserManagement from '../services/userservices'; // Import user service for user management\r\n\r\nfunction Dashboard() {\r\n  const [products, setProducts] = useState([]);\r\n  const [productData, setProductData] = useState({\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n    quantity: '',\r\n    category_id: '',\r\n    image: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\r\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle create form visibility\r\n  const [showUpdateForm, setShowUpdateForm] = useState(false); // State to toggle update form visibility\r\n  const [showDeleteForm, setShowDeleteForm] = useState(false); // State to toggle delete form visibility\r\n  const [users, setUsers] = useState([]); // State to hold users data\r\n  const [showUserManagement, setShowUserManagement] = useState(false); // State to toggle user management section\r\n\r\n  useEffect(() => {\r\n    // Simulate admin status based on some logic (e.g., hardcoded check)\r\n    const isAdminUser = checkAdminStatus(); // Implement your logic here\r\n    setIsAdmin(isAdminUser);\r\n    fetchProducts();\r\n    fetchUsers(); // Fetch users data when component mounts\r\n  }, []);\r\n\r\n  const checkAdminStatus = () => {\r\n    // Implement logic to determine admin status, e.g., from JWT or user roles\r\n    return true; // Return true for demonstration, replace with actual logic\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const productsData = await ProductService.getAllProducts();\r\n      setProducts(productsData);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const usersData = await User.getAllUsers(); // Implement getAllUsers in your UserService\r\n      setUsers(usersData);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProductById = async (productId) => {\r\n    try {\r\n      const product = await ProductService.getProductById(productId);\r\n      console.log('Product fetched:', product);\r\n      // Optionally set the fetched product data into state for update form\r\n      setProductData({\r\n        name: product.name,\r\n        price: product.price,\r\n        description: product.description,\r\n        quantity: product.quantity,\r\n        category_id: product.category_id,\r\n        image: product.image\r\n      });\r\n      setShowUpdateForm(true); // Show update form on fetch\r\n    } catch (error) {\r\n      console.error(`Error fetching product ${productId}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleCreateProduct = async () => {\r\n    try {\r\n      const response = await ProductService.createProduct(productData);\r\n      setMessage(response.message || 'Product created successfully');\r\n      fetchProducts();\r\n      clearProductData();\r\n    } catch (error) {\r\n      setMessage(`Error creating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProduct = async (productId, updatedData) => {\r\n    try {\r\n      const response = await ProductService.updateProduct(productId, updatedData);\r\n      setMessage(response.message || 'Product updated successfully');\r\n      fetchProducts();\r\n      setShowUpdateForm(false); // Hide update form after update\r\n    } catch (error) {\r\n      setMessage(`Error updating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (productId) => {\r\n    try {\r\n      const response = await ProductService.deleteProduct(productId);\r\n      setMessage(response.message || 'Product deleted successfully');\r\n      fetchProducts();\r\n      setShowDeleteForm(false); // Hide delete form after delete\r\n    } catch (error) {\r\n      setMessage(`Error deleting product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const clearProductData = () => {\r\n    setProductData({\r\n      name: '',\r\n      price: '',\r\n      description: '',\r\n      quantity: '',\r\n      category_id: '',\r\n      image: ''\r\n    });\r\n  };\r\n\r\n  const toggleCreateForm = () => {\r\n    setShowCreateForm(!showCreateForm);\r\n    setShowUpdateForm(false); // Hide update form\r\n    setShowDeleteForm(false); // Hide delete form\r\n  };\r\n\r\n  const toggleUpdateForm = () => {\r\n    setShowUpdateForm(!showUpdateForm);\r\n    setShowCreateForm(false); // Hide create form\r\n    setShowDeleteForm(false); // Hide delete form\r\n  };\r\n\r\n  const toggleDeleteForm = () => {\r\n    setShowDeleteForm(!showDeleteForm);\r\n    setShowCreateForm(false); // Hide create form\r\n    setShowUpdateForm(false); // Hide update form\r\n  };\r\n\r\n  const toggleUserManagement = () => {\r\n    setShowUserManagement(!showUserManagement);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {isAdmin && (\r\n        <div className=\"admin-section\">\r\n          {/* Product Management Section */}\r\n          <div className=\"section\">\r\n            <h2>Product Management</h2>\r\n            <h3>\r\n              <a href=\"#\" onClick={toggleCreateForm}>Create Product</a>\r\n            </h3>\r\n            {showCreateForm && (\r\n              <div className=\"create-product-form\">\r\n                {/* Input fields for creating a product */}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"section\">\r\n              <h3>\r\n                <a href=\"#\" onClick={toggleUpdateForm}>Update Product</a>\r\n              </h3>\r\n              {showUpdateForm && (\r\n                <div className=\"update-product-form\">\r\n                  {/* Input fields for updating a product */}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n              <h3>\r\n                <a href=\"#\" onClick={toggleDeleteForm}>Delete Product</a>\r\n              </h3>\r\n              {showDeleteForm && (\r\n                <div className=\"delete-product-form\">\r\n                  {/* Input field for deleting a product */}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n              <h3>All Products</h3>\r\n              <ul>\r\n                {products.map((product) => (\r\n                  <li key={product.id}>\r\n                    {product.name} - ${product.price}\r\n                    <div className=\"button-group\">\r\n                      <button onClick={() => fetchProductById(product.id)}>Edit</button>\r\n                      <button onClick={() => handleDeleteProduct(product.id)}>Delete</button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {/* User Management Section */}\r\n          <div className=\"section\">\r\n            <h2>User Management</h2>\r\n            <button onClick={toggleUserManagement}>Toggle User Management</button>\r\n            {showUserManagement && <UserManagement users={users} />}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Non-admin Section */}\r\n      {!isAdmin && (\r\n        <div className=\"non-admin-section\">\r\n          <h2>Welcome to the Dashboard</h2>\r\n          {/* Non-admin content */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}