{"ast":null,"code":"// products.js\n\n// Define the base URL of the backend API\nconst BASE_URL = 'http://127.0.0.1:5000/api/v1/products';\n\n// Function to fetch all products from the backend\nasync function fetchProducts() {\n  try {\n    const response = await fetch(BASE_URL);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const products = await response.json();\n    return products;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}\n\n// Function to fetch a single product by ID\nasync function fetchProductById(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/${id}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const product = await response.json();\n    return product;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n}\n\n// Function to create a new product\nasync function createProduct(product) {\n  try {\n    const response = await fetch(`${BASE_URL}/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error creating product:', error);\n    throw error;\n  }\n}\n\n// Function to update an existing product\nasync function updateProduct(id, updates) {\n  try {\n    const response = await fetch(`${BASE_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updates)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n}\n\n// Function to delete a product\nasync function deleteProduct(id) {\n  try {\n    const response = await fetch(`${BASE_URL}/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw error;\n  }\n}\n\n// Function to display products in the console\nfunction displayProducts(products) {\n  products.forEach(product => {\n    console.log(`Product ID: ${product.id}`);\n    console.log(`Category ID: ${product.category_id}`);\n    console.log(`Name: ${product.name}`);\n    console.log(`Description: ${product.description}`);\n    console.log(`Price: ${product.price}`);\n    console.log(`Quantity: ${product.quantity}`);\n    console.log(`Image URL: ${product.image}`);\n    console.log(`Size: ${product.size}`);\n    console.log(`Created At: ${product.created_at}`);\n    console.log(`Updated At: ${product.updated_at}`);\n    console.log('---');\n  });\n}\n\n// Example usage: Fetch and display all products\nasync function main() {\n  try {\n    const products = await fetchProducts();\n    displayProducts(products);\n  } catch (error) {\n    console.error('Error in main function:', error);\n  }\n}\n\n// Call the main function to execute\nmain();","map":{"version":3,"names":["BASE_URL","fetchProducts","response","fetch","ok","Error","status","products","json","error","console","fetchProductById","id","product","createProduct","method","headers","body","JSON","stringify","result","updateProduct","updates","deleteProduct","displayProducts","forEach","log","category_id","name","description","price","quantity","image","size","created_at","updated_at","main"],"sources":["C:/Users/Administrator/Desktop/bake/my-react-app/src/components/pro.js"],"sourcesContent":["// products.js\r\n\r\n// Define the base URL of the backend API\r\nconst BASE_URL = 'http://127.0.0.1:5000/api/v1/products';\r\n\r\n// Function to fetch all products from the backend\r\nasync function fetchProducts() {\r\n  try {\r\n    const response = await fetch(BASE_URL);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const products = await response.json();\r\n    return products;\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to fetch a single product by ID\r\nasync function fetchProductById(id) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const product = await response.json();\r\n    return product;\r\n  } catch (error) {\r\n    console.error('Error fetching product:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to create a new product\r\nasync function createProduct(product) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(product)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Error creating product:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to update an existing product\r\nasync function updateProduct(id, updates) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updates)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Error updating product:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to delete a product\r\nasync function deleteProduct(id) {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error('Error deleting product:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Function to display products in the console\r\nfunction displayProducts(products) {\r\n  products.forEach(product => {\r\n    console.log(`Product ID: ${product.id}`);\r\n    console.log(`Category ID: ${product.category_id}`);\r\n    console.log(`Name: ${product.name}`);\r\n    console.log(`Description: ${product.description}`);\r\n    console.log(`Price: ${product.price}`);\r\n    console.log(`Quantity: ${product.quantity}`);\r\n    console.log(`Image URL: ${product.image}`);\r\n    console.log(`Size: ${product.size}`);\r\n    console.log(`Created At: ${product.created_at}`);\r\n    console.log(`Updated At: ${product.updated_at}`);\r\n    console.log('---');\r\n  });\r\n}\r\n\r\n// Example usage: Fetch and display all products\r\nasync function main() {\r\n  try {\r\n    const products = await fetchProducts();\r\n    displayProducts(products);\r\n  } catch (error) {\r\n    console.error('Error in main function:', error);\r\n  }\r\n}\r\n\r\n// Call the main function to execute\r\nmain();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}