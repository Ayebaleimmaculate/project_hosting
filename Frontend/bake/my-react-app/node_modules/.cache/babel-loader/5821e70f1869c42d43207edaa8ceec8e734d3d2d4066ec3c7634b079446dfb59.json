{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\bake\\\\my-react-app\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductService from '../services/productservices';\nimport UserManagement from './userManag'; // Import the UserManagement component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [productData, setProductData] = useState({\n    name: '',\n    price: '',\n    description: '',\n    quantity: '',\n    category_id: '',\n    image: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle create form visibility\n  const [showUpdateForm, setShowUpdateForm] = useState(false); // State to toggle update form visibility\n  const [showDeleteForm, setShowDeleteForm] = useState(false); // State to toggle delete form visibility\n\n  useEffect(() => {\n    // Simulate admin status based on some logic (e.g., hardcoded check)\n    const isAdminUser = checkAdminStatus(); // Implement your logic here\n    setIsAdmin(isAdminUser);\n    fetchProducts();\n  }, []);\n  const checkAdminStatus = () => {\n    // Implement logic to determine admin status, e.g., from JWT or user roles\n    return true; // Return true for demonstration, replace with actual logic\n  };\n  const fetchProducts = async () => {\n    try {\n      const productsData = await ProductService.getAllProducts();\n      setProducts(productsData);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const fetchProductById = async productId => {\n    try {\n      const product = await ProductService.getProductById(productId);\n      console.log('Product fetched:', product);\n      // Optionally set the fetched product data into state for update form\n      setProductData({\n        name: product.name,\n        price: product.price,\n        description: product.description,\n        quantity: product.quantity,\n        category_id: product.category_id,\n        image: product.image\n      });\n      setShowUpdateForm(true); // Show update form on fetch\n    } catch (error) {\n      console.error(`Error fetching product ${productId}:`, error);\n    }\n  };\n  const handleCreateProduct = async () => {\n    try {\n      const response = await ProductService.createProduct(productData);\n      setMessage(response.message || 'Product created successfully');\n      fetchProducts();\n      clearProductData();\n    } catch (error) {\n      setMessage(`Error creating product: ${error.message}`);\n    }\n  };\n  const handleUpdateProduct = async (productId, updatedData) => {\n    try {\n      const response = await ProductService.updateProduct(productId, updatedData);\n      setMessage(response.message || 'Product updated successfully');\n      fetchProducts();\n      setShowUpdateForm(false); // Hide update form after update\n    } catch (error) {\n      setMessage(`Error updating product: ${error.message}`);\n    }\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      const response = await ProductService.deleteProduct(productId);\n      setMessage(response.message || 'Product deleted successfully');\n      fetchProducts();\n      setShowDeleteForm(false); // Hide delete form after delete\n    } catch (error) {\n      setMessage(`Error deleting product: ${error.message}`);\n    }\n  };\n  const clearProductData = () => {\n    setProductData({\n      name: '',\n      price: '',\n      description: '',\n      quantity: '',\n      category_id: '',\n      image: ''\n    });\n  };\n  const toggleCreateForm = () => {\n    setShowCreateForm(!showCreateForm);\n    setShowUpdateForm(false); // Hide update form\n    setShowDeleteForm(false); // Hide delete form\n  };\n  const toggleUpdateForm = () => {\n    setShowUpdateForm(!showUpdateForm);\n    setShowCreateForm(false); // Hide create form\n    setShowDeleteForm(false); // Hide delete form\n  };\n  const toggleDeleteForm = () => {\n    setShowDeleteForm(!showDeleteForm);\n    setShowCreateForm(false); // Hide create form\n    setShowUpdateForm(false); // Hide update form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Product Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"non-admin-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"V7VG28jAhFlPpsipye/XFIWe6s8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ProductService","UserManagement","jsxDEV","_jsxDEV","Dashboard","_s","products","setProducts","productData","setProductData","name","price","description","quantity","category_id","image","message","setMessage","isAdmin","setIsAdmin","showCreateForm","setShowCreateForm","showUpdateForm","setShowUpdateForm","showDeleteForm","setShowDeleteForm","isAdminUser","checkAdminStatus","fetchProducts","productsData","getAllProducts","error","console","fetchProductById","productId","product","getProductById","log","handleCreateProduct","response","createProduct","clearProductData","handleUpdateProduct","updatedData","updateProduct","handleDeleteProduct","deleteProduct","toggleCreateForm","toggleUpdateForm","toggleDeleteForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/bake/my-react-app/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProductService from '../services/productservices';\r\nimport UserManagement from './userManag'; // Import the UserManagement component\r\n\r\nfunction Dashboard() {\r\n  const [products, setProducts] = useState([]);\r\n  const [productData, setProductData] = useState({\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n    quantity: '',\r\n    category_id: '',\r\n    image: ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\r\n  const [showCreateForm, setShowCreateForm] = useState(false); // State to toggle create form visibility\r\n  const [showUpdateForm, setShowUpdateForm] = useState(false); // State to toggle update form visibility\r\n  const [showDeleteForm, setShowDeleteForm] = useState(false); // State to toggle delete form visibility\r\n\r\n  useEffect(() => {\r\n    // Simulate admin status based on some logic (e.g., hardcoded check)\r\n    const isAdminUser = checkAdminStatus(); // Implement your logic here\r\n    setIsAdmin(isAdminUser);\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const checkAdminStatus = () => {\r\n    // Implement logic to determine admin status, e.g., from JWT or user roles\r\n    return true; // Return true for demonstration, replace with actual logic\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const productsData = await ProductService.getAllProducts();\r\n      setProducts(productsData);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProductById = async (productId) => {\r\n    try {\r\n      const product = await ProductService.getProductById(productId);\r\n      console.log('Product fetched:', product);\r\n      // Optionally set the fetched product data into state for update form\r\n      setProductData({\r\n        name: product.name,\r\n        price: product.price,\r\n        description: product.description,\r\n        quantity: product.quantity,\r\n        category_id: product.category_id,\r\n        image: product.image\r\n      });\r\n      setShowUpdateForm(true); // Show update form on fetch\r\n    } catch (error) {\r\n      console.error(`Error fetching product ${productId}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleCreateProduct = async () => {\r\n    try {\r\n      const response = await ProductService.createProduct(productData);\r\n      setMessage(response.message || 'Product created successfully');\r\n      fetchProducts();\r\n      clearProductData();\r\n    } catch (error) {\r\n      setMessage(`Error creating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProduct = async (productId, updatedData) => {\r\n    try {\r\n      const response = await ProductService.updateProduct(productId, updatedData);\r\n      setMessage(response.message || 'Product updated successfully');\r\n      fetchProducts();\r\n      setShowUpdateForm(false); // Hide update form after update\r\n    } catch (error) {\r\n      setMessage(`Error updating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (productId) => {\r\n    try {\r\n      const response = await ProductService.deleteProduct(productId);\r\n      setMessage(response.message || 'Product deleted successfully');\r\n      fetchProducts();\r\n      setShowDeleteForm(false); // Hide delete form after delete\r\n    } catch (error) {\r\n      setMessage(`Error deleting product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const clearProductData = () => {\r\n    setProductData({\r\n      name: '',\r\n      price: '',\r\n      description: '',\r\n      quantity: '',\r\n      category_id: '',\r\n      image: ''\r\n    });\r\n  };\r\n\r\n  const toggleCreateForm = () => {\r\n    setShowCreateForm(!showCreateForm);\r\n    setShowUpdateForm(false); // Hide update form\r\n    setShowDeleteForm(false); // Hide delete form\r\n  };\r\n\r\n  const toggleUpdateForm = () => {\r\n    setShowUpdateForm(!showUpdateForm);\r\n    setShowCreateForm(false); // Hide create form\r\n    setShowDeleteForm(false); // Hide delete form\r\n  };\r\n\r\n  const toggleDeleteForm = () => {\r\n    setShowDeleteForm(!showDeleteForm);\r\n    setShowCreateForm(false); // Hide create form\r\n    setShowUpdateForm(false); // Hide update form\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {isAdmin && (\r\n        <div className=\"admin-section\">\r\n          {/* User Management Section */}\r\n          <div className=\"section\">\r\n            <h2>User Management</h2>\r\n            <UserManagement /> {/* Render the UserManagement component */}\r\n          </div>\r\n\r\n          {/* Product Management Section */}\r\n          <div className=\"section\">\r\n            <h2>Product Management</h2>\r\n            {/* Rest of your product management UI */}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Non-admin Section */}\r\n      {!isAdmin && (\r\n        <div className=\"non-admin-section\">\r\n          <h2>Welcome to the Dashboard</h2>\r\n          {/* Non-admin content */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}